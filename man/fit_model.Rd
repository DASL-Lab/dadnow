% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_model.R
\name{fit_model}
\alias{fit_model}
\title{Fit a model to the data.}
\usage{
fit_model(prm)
}
\arguments{
\item{prm}{List of parameters. Must contain:
 \itemize{
  \item \code{family} String. Type of model to fit. "lm" for linear regression.
"lm-log" for linear regression with log transformation.

  \item \code{data.dad} Dataframe of DAD data. Must contain the following columns:
date, virus, geo, count, percapita

  \item  \code{data.expl} Dataframe of explanatory data. Must contain the following columns:
date, virus, geo, varname.expl

  \item  \code{varname.dad} String. Name of the variable in data.dad to fit the model to.

  \item  \code{varname.expl} String. Name of the variable in data.expl to use as an explanatory variable.

  \item  \code{date.range.fit} Vector of two dates. The model will be fit to data within this date range.
 }}
}
\value{
A fitted model object.
}
\description{
The goal of this function is to fit a statistical model, typically
a regression, of the DAD data against another "explanatory" data set.
This fitted model will then be used downstream to nowcast DAD data
from new (i.e. more recent than the latest DAD observation) explanatory data.

The data consists of a pair of data sets, one being DAD and the other
being another data source that plays the role of the
explanatory variable (e.g., CNISP, PTSOS, RVDSS, ...)

Moreover, the variables used in each data set must be selected.
For example, the user can choose to work with counts of DAD hospital admissions
or per-capita rates. This choice determines the input parameter `varname.dad`.
Similarly, for the explanatory data set, the variable name used to fit the model
must be selected. Its name depends on the data set itself (the column name used)
and is set through the input parameter `varname.expl`.

This function is a wrapper for several possible models. The type of the
model used is set with the input parameter `family`.
}
\examples{

set.seed(1234)

data.dad  = fake_dad()
data.expl = fake_expl(dad = data.dad)

prm = list(
 family = 'lm',
 data.dad = data.dad,
 data.expl = data.expl,
 varname.dad = 'count',
 varname.expl = 'thecount',
 date.range.fit = c('2020-01-10', '2020-12-15')
)

fitted.model = fit_model(prm)

}
